//Simple Calculator
//code 
module calculator(
    input [3:0] A,        // 4-bit input A
    input [3:0] B,        // 4-bit input B
    input [2:0] OP,       // Operation select
    output reg [3:0] RESULT
);

    always @(*) begin
        case(OP)
            3'b000: RESULT = A + B;       // Addition
            3'b001: RESULT = A - B;       // Subtraction
            3'b010: RESULT = A & B;       // AND
            3'b011: RESULT = A | B;       // OR
            3'b100: RESULT = A ^ B;       // XOR
            3'b101: RESULT = ~A;          // NOT (on A)
            3'b110: RESULT = ~(A & B);    // NAND
            3'b111: RESULT = ~(A | B);    // NOR
            default: RESULT = 4'b0000;
        endcase
    end

endmodule


//testbench
`timescale 1ns/1ps

module calculator_tb;
    reg [3:0] A;
    reg [3:0] B;
    reg [2:0] OP;
    wire [3:0] RESULT;

    calculator uut (
        .A(A),
        .B(B),
        .OP(OP),
        .RESULT(RESULT)
    );

    initial begin
        A = 4'b0101; B = 4'b0011;  // Example inputs
        $display("| Time | A    | B    | OP  | RESULT |");
        $display("|------|------|------|-----|--------|");

        OP = 3'b000; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // Add
        OP = 3'b001; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // Sub
        OP = 3'b010; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // AND
        OP = 3'b011; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // OR
        OP = 3'b100; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // XOR
        OP = 3'b101; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // NOT A
        OP = 3'b110; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // NAND
        OP = 3'b111; #10; $display("| %4dns | %b | %b | %b | %b     |", $time, A, B, OP, RESULT); // NOR

        $finish;
    end
endmodule
